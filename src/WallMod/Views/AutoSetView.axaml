<UserControl xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:ia="using:Xaml.Behaviors.Interactions.Animated"
		xmlns:i="using:Avalonia.Xaml.Interactivity"			 
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="WallMod.Views.AutoSetView"
		xmlns:vm="using:WallMod.ViewModels"
		x:DataType="vm:AutoSetViewModel">

	<ScrollViewer VerticalScrollBarVisibility="Auto">
		<Interaction.Behaviors>
			<ia:VerticalScrollViewerAnimatedBehavior/>
		</Interaction.Behaviors>
		
		<StackPanel Spacing="20" Margin="20">
		
			<TextBlock Text="Autoset Wallpapers (beta)" HorizontalAlignment="Center" FontWeight="Bold" FontSize="15" Foreground="White"/>

			<TextBlock Text="NOTE: Still in development. No queue memory and autosetting will not work if app is closed" FontSize="12" Foreground="Gray" TextWrapping="Wrap" />
			
			<!-- ─────────────  INTERVAL (spans full width)  ───────────── -->
			<Border Background="#222" CornerRadius="8" Padding="16">
				<Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto"
						ColumnDefinitions="Auto,*"
						RowSpacing="6"
						ColumnSpacing="6">

					<TextBlock Text="Interval" FontWeight="Bold" Foreground="White" Grid.Row="0" Grid.ColumnSpan="2" Margin="0,0,0,8"/>

					<TextBlock Text="Months"  Foreground="White" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"/>
					<NumericUpDown Value="{Binding MonthsInput}"  Minimum="0" Width="115" FormatString="0"
									Grid.Row="1" Grid.Column="1"/>

					<TextBlock Text="Weeks"   Foreground="White" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center"/>
					<NumericUpDown Value="{Binding WeeksInput}"   Minimum="0" Width="115" FormatString="0"
									Grid.Row="2" Grid.Column="1"/>

					<TextBlock Text="Days"    Foreground="White" Grid.Row="3" Grid.Column="0" VerticalAlignment="Center"/>
					<NumericUpDown Value="{Binding DaysInput}"    Minimum="0" Width="115" FormatString="0"
									Grid.Row="3" Grid.Column="1"/>

					<TextBlock Text="Hours"   Foreground="White" Grid.Row="4" Grid.Column="0" VerticalAlignment="Center"/>
					<NumericUpDown Value="{Binding HoursInput}"   Minimum="0" Width="115" FormatString="0"
									Grid.Row="4" Grid.Column="1"/>

					<TextBlock Text="Minutes" Foreground="White" Grid.Row="5" Grid.Column="0" VerticalAlignment="Center"/>
					<NumericUpDown Value="{Binding MinutesInput}" Minimum="0" Width="115" FormatString="0"
									Grid.Row="5" Grid.Column="1"/>
				</Grid>
			</Border>

			<!-- ─────────────  MODE SELECTOR (side-by-side) ───────────── -->
			<Border Background="#222" CornerRadius="8" Padding="16">
				<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Spacing="32">
					<RadioButton Content="Custom"
									GroupName="QueueChoice"
									Command="{Binding queueChoiceCommand}"
									CommandParameter="Custom"
									IsChecked="{Binding CustomQueueViewVisible, Mode=TwoWay}"
									Foreground="White"/>

					<RadioButton Content="Random"
									GroupName="QueueChoice"
									Command="{Binding queueChoiceCommand}"
									CommandParameter="Random"
									IsChecked="{Binding RandomQueueViewVisible, Mode=TwoWay}"
									Foreground="White"/>
				</StackPanel>
			</Border>

			<!-- ─────────────  CUSTOM QUEUE PANEL  ───────────── -->
			<Border Background="#202020" CornerRadius="8" Padding="10"
        IsVisible="{Binding CustomQueueViewVisible}" DragDrop.DragOver="ListBox_DragOver">
				<StackPanel Spacing="8">
					<TextBlock Text="Custom Wallpaper Queue"
							   Foreground="White"
							   FontWeight="Bold"/>

					<ListBox
						x:Name="QueueListBox"
						ItemsSource="{Binding WallpaperQueue}"
						Background="Transparent"
						BorderThickness="0"
						DragDrop.AllowDrop="True"
						DragDrop.DragOver="ListBox_DragOver"
						DragDrop.Drop="ListBox_Drop"
						DragDrop.DragLeave="ListBox_DragLeave">

						<ListBox.ItemTemplate>
							<DataTemplate>
								<Border Background="#303030"
										CornerRadius="6"
										Margin="0,2"
										Padding="4"
										Cursor="SizeAll"
										PointerPressed="Item_PointerPressed"
										PointerMoved="Item_PointerMoved"
										PointerReleased="Item_PointerReleased">
									<Grid ColumnDefinitions="Auto,*,Auto"
											VerticalAlignment="Center">
										<Image Source="{Binding ImageThumbnailBitmap}"
												Width="50" Height="50"/>
										<TextBlock Grid.Column="1"
													Text="{Binding Name}"
													Foreground="White"
													Margin="8,0"
													VerticalAlignment="Center"/>
									</Grid>
								</Border>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>

					<!-- overlay for insertion indicator -->
					<Canvas x:Name="DropIndicator"
							IsHitTestVisible="False"
							Panel.ZIndex="1">
						<Border x:Name="InsertLine"
								Background="Aqua"
								Height="2"
								IsVisible="False"/>
					</Canvas>

					<Button Content="Clear queue"
							HorizontalAlignment="Right"
							Click="ClearWallpaperQueue"/>
				</StackPanel>
			</Border>
			
			
			
			<!-- ─────────────  RANDOM DIRECTORY PANEL  ───────────── -->
			<Border Background="#202020" CornerRadius="8" Padding="10"
					IsVisible="{Binding RandomQueueViewVisible}">
				<StackPanel Spacing="8">
					<TextBlock Text="Directory of Random Wallpapers"
								Foreground="White"
								FontWeight="Bold"/>

					<!-- hook up your Browse-command here when ready -->
					<StackPanel Orientation="Horizontal" Spacing="12">
						<Button Content="Browse…" Width="80" Command="{Binding execBrowseDirectory}"/>
						<TextBlock Text="{Binding RandWallpapersRemaining}" Foreground="Aqua" VerticalAlignment="Center"/>
					</StackPanel>


					<TextBlock Text="{Binding RandDirecName}"
								Foreground="LightGray"
								TextWrapping="Wrap"
								Margin="4,4,0,0"/>

					<StackPanel Orientation="Vertical" HorizontalAlignment="Center">
						<RadioButton	Content="1 Random Image For All Monitors"
										FontSize="13"
										GroupName="RandMonitorChoice"
										Command="{Binding randMonitorChoiceCommand}"
										CommandParameter="SingularRand"
										IsChecked="{Binding !ChooseRandForEachMonitor, Mode=TwoWay}"
										Foreground="White"/>
						<RadioButton	Content="Randomize Each Monitor"
										FontSize="13"
										GroupName="RandMonitorChoice"
										Command="{Binding randMonitorChoiceCommand}"
										CommandParameter="RandEach"
										IsChecked="{Binding ChooseRandForEachMonitor, Mode=TwoWay}"
										Foreground="White"/>
					</StackPanel>
				
				</StackPanel>
				
			</Border>

			<StackPanel Orientation="Horizontal" 
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Spacing="24">
				<Button Content="Disable"
						Width="100" Command="{Binding ExecDisableAutoSet}"
						Background="DarkRed"
						Foreground="White"
						IsEnabled="{Binding AutoSetDisableButtonEnabled}"
						HorizontalContentAlignment="Center"
						Margin="0,10,0,0" />

				<Button Content="Enable"
						Width="100" Command="{Binding ExecEnableAutoSet}"
						Background="DarkGreen"
						Foreground="White"
						IsEnabled="{Binding AutoSetEnableButtonEnabled}"
						HorizontalContentAlignment="Center"
						Margin="0,10,0,0" />
			</StackPanel>


		</StackPanel>
	</ScrollViewer>
	
</UserControl>
